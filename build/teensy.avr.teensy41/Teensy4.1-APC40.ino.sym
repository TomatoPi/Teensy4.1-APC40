
/home/tomato/build.Arduino/Teensy4.1-APC40.build/Teensy4.1-APC40.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001e94 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00013a40 l    d  .fini	00000000 .fini
00013a44 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200026c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
600180a8 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 tempmon.c
200038b8 l     O .bss	00000004 s_hotCount
200038bc l     O .bss	00000004 s_hotTemp
200038c0 l     O .bss	00000004 s_hot_ROOM
200038c4 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000bb44 l     F .text.itcm	00000088 schedule_transfer
0000bbcc l     F .text.itcm	00000036 run_callbacks
0000bc04 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20003840 l     O .bss	00000008 endpoint0_buffer
20003848 l     O .bss	00000004 endpoint0_notify_mask
20002880 l     O .bss	00000008 endpoint0_setupdata
2000384c l     O .bss	00000004 endpointN_notify_mask
20003880 l     O .bss	00000008 reply_buffer
20003907 l     O .bss	00000001 sof_usage
2000390e l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
20003903 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20003868 l     O .bss	00000000 object.0
60001e80 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 Teensy4.1-APC40.ino.cpp
000000b0 l     F .text.itcm	00000030 hw::async::async_master& hw::async::async_master::get<Master>() [clone .part.0]
000014c8 l     F .text.itcm	000000c0 _GLOBAL__sub_I__ZN7logging22is_logging_enabled_forENS_8severityE
200032d0 l     O .bss	00000004 guard variable for loop::elapsed_since_heartbeat
200034f4 l     O .bss	00000004 loop::elapsed_since_heartbeat
200034f8 l     O .bss	00000001 async_address_poll(hw::async::async_device const&, bool)::buffer
200034fc l     O .bss	00000002 hw::LedsDriver::begin_cycle()::tmp_buffer
20003500 l     O .bss	00000002 hw::LedsDriver::setup(unsigned long, unsigned long)::tmp_buffer
20003504 l     O .bss	00000002 hw::LedsDriver::end_cycle()::tmp_buffer
200022a9 l     O .data	00000001 loop::heartbeat_state
20000a28 l     O .data	00000008 hw::ios::CLIP_0_0
20000a30 l     O .data	00000008 hw::ios::CLIP_0_1
20000a38 l     O .data	00000008 hw::ios::CLIP_0_2
20000a40 l     O .data	00000008 hw::ios::CLIP_0_3
20000a48 l     O .data	00000008 hw::ios::CLIP_0_4
20000a50 l     O .data	00000008 hw::ios::CLIP_0_5
20000a58 l     O .data	00000008 hw::ios::CLIP_0_6
20000a60 l     O .data	00000008 hw::ios::CLIP_0_7
20000a68 l     O .data	00000008 hw::ios::CLIP_1_0
20000a70 l     O .data	00000008 hw::ios::CLIP_1_1
20000a78 l     O .data	00000008 hw::ios::CLIP_1_2
20000a80 l     O .data	00000008 hw::ios::CLIP_1_3
20000a88 l     O .data	00000008 hw::ios::CLIP_1_4
20000a90 l     O .data	00000008 hw::ios::CLIP_1_5
20000a98 l     O .data	00000008 hw::ios::CLIP_1_6
20000aa0 l     O .data	00000008 hw::ios::CLIP_1_7
20000aa8 l     O .data	00000008 hw::ios::CLIP_2_0
20000ab0 l     O .data	00000008 hw::ios::CLIP_2_1
20000ab8 l     O .data	00000008 hw::ios::CLIP_2_2
20000ac0 l     O .data	00000008 hw::ios::CLIP_2_3
20000ac8 l     O .data	00000008 hw::ios::CLIP_2_4
20000ad0 l     O .data	00000008 hw::ios::CLIP_2_5
20000ad8 l     O .data	00000008 hw::ios::CLIP_2_6
20000ae0 l     O .data	00000008 hw::ios::CLIP_2_7
20000ae8 l     O .data	00000008 hw::ios::CLIP_3_0
20000af0 l     O .data	00000008 hw::ios::CLIP_3_1
20000af8 l     O .data	00000008 hw::ios::CLIP_3_2
20000b00 l     O .data	00000008 hw::ios::CLIP_3_3
20000b08 l     O .data	00000008 hw::ios::CLIP_3_4
20000b10 l     O .data	00000008 hw::ios::CLIP_3_5
20000b18 l     O .data	00000008 hw::ios::CLIP_3_6
20000b20 l     O .data	00000008 hw::ios::CLIP_3_7
20000b28 l     O .data	00000008 hw::ios::CLIP_4_0
20000b30 l     O .data	00000008 hw::ios::CLIP_4_1
20000b38 l     O .data	00000008 hw::ios::CLIP_4_2
20000b40 l     O .data	00000008 hw::ios::CLIP_4_3
20000b48 l     O .data	00000008 hw::ios::CLIP_4_4
20000b50 l     O .data	00000008 hw::ios::CLIP_4_5
20000b58 l     O .data	00000008 hw::ios::CLIP_4_6
20000b60 l     O .data	00000008 hw::ios::CLIP_4_7
20000b68 l     O .data	000000a0 hw::ios::CLIP_Y_X
20000da8 l     O .data	00000009 hw::OUTPUT_PINS
200010f0 l     O .data	00000002 async_setup_iocon(hw::async::async_device const&, bool)::iocon_buffer
200010f4 l     O .data	00000003 async_setup_iodir(hw::async::async_device const&, bool)::iodir_buffer
00000000 l    df *ABS*	00000000 SD.cpp
00002b84 l     F .text.itcm	00000080 _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 i2c_driver_wire.cpp
0000a304 l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN13I2CDriverWireC2ER9I2CMasterR8I2CSlave
00000000 l    df *ABS*	00000000 imx_rt1060_i2c_driver.cpp
0000a82c l     F .text.itcm	0000000c master2_isr()
0000a838 l     F .text.itcm	0000000c master1_isr()
0000a844 l     F .text.itcm	0000000c master_isr()
0000adb8 l     F .text.itcm	0000000c slave2_isr()
0000adc4 l     F .text.itcm	0000000c slave1_isr()
0000add0 l     F .text.itcm	0000000c slave_isr()
0000addc l     F .text.itcm	00000168 _GLOBAL__sub_I__ZN9I2CBufferC2Ev
200033c8 l     O .bss	00000000 empty_buffer
00000000 l    df *ABS*	00000000 usb_desc.c
20002150 l     O .data	00000012 device_descriptor
20002254 l     O .data	00000028 microsoft_os_compatible_id_desc
2000227c l     O .data	00000012 microsoft_os_string_desc
60001f90 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00003f84 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00004cdc l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
000065c4 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00006ddc l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
00006ed8 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
00008484 l     F .text.itcm	00000030 sdIrs()
000084b4 l     F .text.itcm	00000014 isBusyDat()
000084c8 l     F .text.itcm	0000000c isBusyDMA()
000084d4 l     F .text.itcm	000000cc setSdclk(unsigned long)
000086a8 l     F .text.itcm	00000128 initSDHC()
000087d0 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0000890c l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
000089a4 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
00008aa0 l     F .text.itcm	0000002c isBusyCMD13()
00008c58 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
00008e70 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
200038fa l     O .bss	00000001 m_initDone
200032d8 l     O .bss	00000004 m_sdClkKhz
200038fb l     O .bss	00000001 m_version2
200033c4 l     O .bss	00000004 m_errorLine
200038fc l     O .bss	00000001 m_highCapacity
200038fd l     O .bss	00000001 m_transferActive
200033c8 l     O .bss	00000010 m_cid
200033d8 l     O .bss	00000010 m_csd
200033e8 l     O .bss	00000004 m_ocr
200033ec l     O .bss	00000004 m_rca
200033f0 l     O .bss	00000004 m_busyFcn
200038fe l     O .bss	00000001 m_dmaBusy
200033f4 l     O .bss	00000004 m_irqstat
200022a6 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00009b48 l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20000390 l     O .data	0000012c lookupTable
2000051c l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 SPI.cpp
00009e6c l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
200032dc l     O .bss	00000040 rx_buffer1
2000335c l     O .bss	00000040 tx_buffer1
200004bc l     O .data	00000060 UART6_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
2000331c l     O .bss	00000040 rx_buffer2
2000339c l     O .bss	00000028 tx_buffer2
20001b40 l     O .data	00000060 UART4_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Time.cpp
200005f0 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000c4b0 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000c510 l     F .text.itcm	000000b4 rx_event
0000c5c4 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000c654 l     F .text.itcm	000001b8 usb_serial_write.part.0
20003888 l     O .bss	00000004 rx_available
2000388c l     O .bss	00000010 rx_count
20003905 l     O .bss	00000001 rx_head
2000389c l     O .bss	00000010 rx_index
200038ac l     O .bss	00000009 rx_list
200038f4 l     O .bss	00000002 rx_packet_size
20003906 l     O .bss	00000001 rx_tail
20002700 l     O .bss	00000100 rx_transfer
20003908 l     O .bss	00000001 transmit_previous_timeout
200038f6 l     O .bss	00000002 tx_available
20003909 l     O .bss	00000001 tx_head
2000390a l     O .bss	00000001 tx_noautoflush
200038f8 l     O .bss	00000002 tx_packet_size
20002800 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20003901 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000e7a8 l     F .text.itcm	00000018 stdio_exit_handler
0000e7c0 l     F .text.itcm	00000040 cleanup_stdio
0000e800 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00010e4c l     F .text.itcm	00000076 __sprint_r.part.0
00011e50 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0001225c l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 hw.cpp
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
60001e40 l     F .text.code	00000008 __main_veneer
60001e48 l     F .text.code	00000008 __set_arm_clock_veneer
60001e50 l     F .text.code	00000008 __sm_set_pool_veneer
60001e58 l     F .text.code	00000008 __memset_veneer
60001e60 l     F .text.code	00000008 __delay_veneer
60001e68 l     F .text.code	00000008 __pwm_init_veneer
60001e70 l     F .text.code	00000008 ____libc_init_array_veneer
60001e78 l     F .text.code	00000008 __usb_init_serialnumber_veneer
00013a28 l     F .text.itcm	00000008 ___init_veneer
00013a30 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00000208  w    F .text.itcm	0000006e SDFile::getModifyTime(DateTimeFields&)
00009d9c g     F .text.itcm	000000b8 toUpcase(unsigned short)
0000ca34 g     F .text.itcm	00000018 usb_serial_available
000132c4 g     F .text.itcm	00000024 _isatty_r
00006d74 g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
6000167c g     F .text.code	00000002 startup_default_late_hook
000132e8 g     F .text.itcm	0000002c _lseek_r
00008fcc g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000cc04  w    F .text.itcm	000000d8 yield
0000a930 g     F .text.itcm	0000003c IMX_RT1060_I2CMaster::write_async(unsigned char, unsigned char const*, unsigned int, bool)
00007780  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
200038f0 g     O .bss	00000004 usb_timer1_callback
00005b5c g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
60001eac g     O .text.progmem	00000018 usb_string_manufacturer_name_default
60001794 g     F .text.code	00000384 configure_external_ram
00007700  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00005ae8 g     F .text.itcm	00000074 FatFile::truncate()
200031e0 g     O .bss	00000078 Wire1
00006588  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00005ef0 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
20000e48 g     O .data	00000024 vtable for I2CDriverWire
000072e4 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
200033f8 g     O .bss	00000004 FsDateTime::callback
200036b4 g     O .bss	00000001 __lock___atexit_recursive_mutex
00011f84 g     F .text.itcm	0000004c _wcrtomb_r
20003864 g     O .bss	00000002 global_flags
00006058 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
00008058 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
00006714 g     F .text.itcm	00000056 FatFormatter::initPbs()
0000b0a0 g     F .text.itcm	0000001c Print::println()
0000844c g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
20000e6c g     O .data	00000070 vtable for DedicatedSpiCard
0000f22c g     F .text.itcm	00000020 __sseek
0000e8d4 g     F .text.itcm	0000003c __sinit
00002f2c g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
00013848 g     F .text.itcm	000000b0 __swbuf_r
00000410  w    F .text.itcm	00000028 File::flush()
00000278  w    F .text.itcm	0000006e SDFile::getCreateTime(DateTimeFields&)
0000dfac g     F .text.itcm	0000000c __malloc_unlock
00000470  w    F .text.itcm	000000b0 SDFile::openNextFile(unsigned char)
200034ec g     O .bss	00000004 FsVolume::m_cwv
00005168 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
20003900 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
000076f4  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
00000084  w    F .text.itcm	00000002 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::~MidiInterface()
60001de0 g     F .text.code	00000054 analog_init
0000a368  w    F .text.itcm	00000022 IMX_RT1060_I2CMaster::finished()
0000d70c g     F .text.itcm	0000004a _vdprintf_r
00004ed0 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
00007d30 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
20001a1c g     O .data	00000004 F_CPU_ACTUAL
20000fd0  w    O .data	0000005c vtable for SDFile
0000dd54 g     F .text.itcm	000000f8 memmove
00009584 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
0000dfb8 g     F .text.itcm	0000004c _Balloc
00013a4c g       .ARM.exidx	00000000 __exidx_end
000070c4 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
200038ff g     O .bss	00000001 EventResponder::runningFromYield
00009a00 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
000075dc g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
0000bae4 g     F .text.itcm	00000060 tempmonGetTemp
0000b050 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
20001bb8 g     O .data	00000004 __atexit_recursive_mutex
0000d700 g     F .text.itcm	0000000c __errno
00000550  w    F .text.itcm	00000026 SDFile::isDirectory()
0000d278 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
00003aa8 g     F .text.itcm	00000176 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
000002e8  w    F .text.itcm	00000044 File::write(unsigned char const*, unsigned int)
60001000 g     O .text.headers	00000020 ImageVectorTable
000008a4  w    F .text.itcm	000000a8 File::~File()
2000340c g     O .bss	00000004 EventResponder::firstInterrupt
0000c434 g     F .text.itcm	00000004 usb_transfer_status
0000b03c g     F .text.itcm	0000000c IRQHandler_Serial2
0000d580 g     F .text.itcm	00000084 sm_set_pool
20003414 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
00004014 g     F .text.itcm	0000004c ExFatFormatter::writeUpcaseUnicode(unsigned short)
2000382c g     O .bss	00000004 __stdio_exit_handler
00007408 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
20001a80 g     O .data	00000060 Serial1
00004cc4 g     F .text.itcm	00000018 ExFatPartition::rootLength()
20002998 g     O .bss	00000110 MIDIB
0000064c  w    F .text.itcm	00000054 SDFile::setCreateTime(DateTimeFields const&)
0000c4a8  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
00013298 g     F .text.itcm	0000002c _fstat_r
2000138c g     O .data	00000370 digital_pin_to_info_PGM
20003850 g     O .bss	00000004 errno
00009a18 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00004a34 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
00013a48 g       .text.itcm	00000000 _etext
00009ecc g     F .text.itcm	000000dc _spi_dma_rxISR0()
000063a4 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
200026c0 g       .bss	00000000 _sbss
0000676c g     F .text.itcm	0000005c FatFormatter::writeMbr()
00009850 g     F .text.itcm	00000006 sdCsInit(unsigned char)
000029a0 g     F .text.itcm	00000110 SDClass::mediaPresent()
000085ac g     F .text.itcm	0000000c SdioCard::errorData() const
0000975c g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
00004be4 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00004110 g     F .text.itcm	0000052c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
0000b68c g     F .text.itcm	00000024 digitalRead
60001f9c g       *ABS*	00000000 _stextload
00002468 g     F .text.itcm	00000060 loop
0000d3c4 g     F .text.itcm	0000007a flexpwm_init
0000a234 g     F .text.itcm	00000020 I2CDriverWire::write(unsigned char)
60001680 g     F .text.code	00000004 startup_debug_reset
0000c2f8 g     F .text.itcm	00000064 usb_config_rx
00002cc4 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
000093b4 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
20002aa8 g     O .bss	00000034 Master
20003408 g     O .bss	00000004 EventResponder::lastInterrupt
0000748c g     F .text.itcm	00000028 FsBaseFile::close()
00002324 g     F .text.itcm	00000100 hw::LedsDriver::end_cycle()
0000a1e4 g     F .text.itcm	00000048 SPIClass::end()
0000b730 g     F .text.itcm	00000134 memcpy
200034e8 g     O .bss	00000004 hw::test
000012e4  w    F .text.itcm	0000006e midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::MidiInterface(midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>&)
0000032c  w    F .text.itcm	00000060 File::available()
000077f4 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
00009c60 g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
200026c0 g     O .data	00000000 .hidden __TMC_END__
00004ab8 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
000054bc g     F .text.itcm	00000028 FatFile::peek()
0000f308 g     F .text.itcm	00001b44 _svfprintf_r
20003902  w    O .bss	00000001 SDFile::name()::zeroterm
200038d8 g     O .bss	00000004 systick_millis_count
000038cc g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
00000130  w    F .text.itcm	0000003c SDFile::truncate(unsigned long long)
0000d198 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
0000cebc g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
2000390c g     O .bss	00000001 usb_configuration
000076e8  w    F .text.itcm	00000006 SdCardInterface::status()
0000d534 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000961c g     F .text.itcm	00000030 SdioCard::syncDevice()
00008858 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
000006ec  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
000054e4 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00001018 g     F .text.itcm	000002cc hw::LedsDriver::update_mcps()
00007e1c g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
60001eac  w    O .text.progmem	00000018 usb_string_manufacturer_name
0000a96c g     F .text.itcm	0000004c IMX_RT1060_I2CMaster::read_async(unsigned char, unsigned char*, unsigned int, bool)
0000d774 g     F .text.itcm	00000010 malloc
000028c4 g     F .text.itcm	000000dc SDClass::format(int, char, Print&)
20000fac  w    O .data	00000024 vtable for FsFile
0000bac0  w    F .text.itcm	0000000a _fstat
0000de4c g     F .text.itcm	00000040 __assert_func
00009e54  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
200002a8 g     O .data	000000c8 __mprec_tens
60001ca4 g     F .text.code	000000e8 usb_init
000076f0  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00000814  w    F .text.itcm	0000008e SDFile::seek(unsigned long long, int)
200036f0 g     O .bss	00000004 __malloc_top_pad
200038dc g     O .bss	00000004 systick_safe_read
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
00003c20 g     F .text.itcm	000000e4 ExFatFile::truncate()
20001bc0 g     O .data	00000000 .hidden __dso_handle
00011fd0 g     F .text.itcm	00000008 _localeconv_r
000099a8 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
00013454 g     F .text.itcm	000002f4 __sfvwrite_r
0000e15c g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
000068e4 g     F .text.itcm	000001c4 FatFormatter::makeFat32()
60001f2c g     O .text.progmem	00000062 usb_config_descriptor_480
000099f8 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
00004d90 g     F .text.itcm	00000034 FatFile::addCluster()
0000f270 g     F .text.itcm	00000024 _sbrk_r
20002164 g     O .data	00000050 i2c1_config
00008624 g     F .text.itcm	0000001c SdioCard::type() const
60001674 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
0000cabc g     F .text.itcm	00000020 usb_serial_getchar
000000e0  w    F .text.itcm	00000050 SDFile::name()
200038e0 g     O .bss	00000008 usb_cdc_line_coding
0000b638 g     F .text.itcm	00000054 digitalWrite
20003410 g     O .bss	00000004 EventResponder::lastYield
00002c9c g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00013314 g     F .text.itcm	0000002c _read_r
0000a578  w    F .text.itcm	0000005c IMX_RT1060_I2CSlave::IMX_RT1060_I2CSlave(IMXRT_LPI2C_Registers*, IMX_RT1060_I2CBase::Config&, void (*)())
00000590  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
00007774  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00003fa4 g     F .text.itcm	0000002e ExFatFormatter::syncUpcase()
0000016c  w    F .text.itcm	00000054 SDFile::setModifyTime(DateTimeFields const&)
00011fd8 g     F .text.itcm	000000c6 _fclose_r
20003854 g     O .bss	00000010 extmem_smalloc_pool
200036e8 g     O .bss	00000004 __malloc_max_sbrked_mem
00007f20 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
00000438  w    F .text.itcm	0000001a SDFile::position()
0000b6b0 g     F .text.itcm	00000070 pinMode
0000cd00 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
20003088 g     O .bss	00000070 Slave1
0000ac1c g     F .text.itcm	00000016 IMX_RT1060_I2CSlave::listen_range(unsigned char, unsigned char)
0000a668 g     F .text.itcm	000001c4 IMX_RT1060_I2CMaster::_interrupt_service_routine()
20003258 g     O .bss	00000078 Wire2
60018400 g     O .text.csf	00000c00 hab_csf
0000038c  w    F .text.itcm	0000002c File::peek()
0000711c g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
00002550  w    F .text.itcm	000000c8 SDClass::open(char const*, unsigned char)
00013a44 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
0000bacc  w    F .text.itcm	00000004 _isatty
20003404 g     O .bss	00000004 EventResponder::firstYield
0000ccdc  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
00000fcc g     F .text.itcm	0000004a hw::LedsDriver::clear_all()
00009d04 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00000618  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0000eb1c g     F .text.itcm	000003d8 _realloc_r
00000578  w    F .text.itcm	00000018 SDFile::read(void*, unsigned int)
0000df3c g     F .text.itcm	00000048 __libc_init_array
000001c0  w    F .text.itcm	00000046 SDFile::rewindDirectory()
20000f04 g     O .data	00000030 vtable for HardwareSerialIMXRT
000034a8 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
000085b8 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
000024cc g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
0000a288 g     F .text.itcm	00000028 I2CDriverWire::write(unsigned char const*, unsigned int)
0000381c g     F .text.itcm	000000ae ExFatFile::addDirCluster()
000133ec g     F .text.itcm	00000066 _fputwc_r
20000280 g     O .data	00000028 __mprec_bigtens
00008250  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
0000badc  w    F .text.itcm	00000004 abort
0000c490  w    F .text.itcm	00000004 usb_serial_class::clear()
0000ba80  w    F .text.itcm	00000034 _sbrk
600159e8 g       *ABS*	00000000 _sdataload
0000e4c4 g     F .text.itcm	00000042 __mcmp
20001050 g     O .data	00000030 vtable for SDClass
20001bbc g     O .data	00000004 __brkval
2000390b g     O .bss	00000001 usb_cdc_line_rtsdtr
60001e34 g     F .text.code	00000000 _init
0000c80c g     F .text.itcm	00000002 usb_serial_reset
00004e3c g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
0000a9b8 g     F .text.itcm	00000070 IMX_RT1060_I2CMaster::set_clock(unsigned long)
000026d0  w    F .text.itcm	00000054 SDClass::remove(char const*)
00000088  w    F .text.itcm	00000028 SDFile::close()
0000078c  w    F .text.itcm	00000040 SDFile::~SDFile()
200038d0 g     O .bss	00000004 serialMIDIB
60001ec8 g     O .text.progmem	00000062 usb_config_descriptor_12
00009980 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
20003940 g       .bss	00000000 _ebss
20003508  w    O .bss	00000018 hw::async::async_master::get<Master>()::m
00009054 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
000005c8  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
0000e0bc g     F .text.itcm	00000040 __hi0bits
00002c04 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
0000a850 g     F .text.itcm	000000e0 IMX_RT1060_I2CMaster::start(unsigned char, unsigned long)
00002ab0 g     F .text.itcm	000000d4 SDClass::begin(unsigned char)
0000a2b0 g     F .text.itcm	00000054 I2CDriverWire::I2CDriverWire(I2CMaster&, I2CSlave&)
00003970 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
0000abf8 g     F .text.itcm	0000000c IMX_RT1060_I2CSlave::listen(unsigned char)
20203080 g       .bss.dma	00000000 _heap_start
200036b8 g     O .bss	00000001 __lock___malloc_recursive_mutex
20003018 g     O .bss	00000070 Slave
000024c8  w    F .text.itcm	00000002 SDClass::~SDClass()
200036f4 g     O .bss	00000138 __sf
00007a54 g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
000008a4  w    F .text.itcm	000000a8 File::~File()
00000003 g       *ABS*	00000000 _itcm_block_count
200026e0 g     O .bss	00000020 endpoint0_transfer_data
00006b5c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
00009af8 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
0000b868 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0000d440 g     F .text.itcm	000000f4 pwm_init
60019000 g       .text.csf	00000000 __text_csf_end
60001b18 g     F .text.code	0000005c usb_pll_start
0000e314 g     F .text.itcm	000000c0 __pow5mult
00005714 g     F .text.itcm	00000090 FatFile::rmdir()
0000a270 g     F .text.itcm	00000016 I2CDriverWire::peek()
00006fe4 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
00008480  w    F .text.itcm	00000002 SdioCard::end()
00002760  w    F .text.itcm	00000036 SDClass::exists(char const*)
20003830 g     O .bss	00000010 _targeted_masters
200026c0 g     O .bss	00000020 endpoint0_transfer_ack
200038e8 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000c3f0 g     F .text.itcm	00000028 usb_transmit
0000b010 g     F .text.itcm	00000020 systick_isr
0000df90 g     F .text.itcm	00000002 __retarget_lock_release_recursive
20001a70 g     O .data	00000010 Serial
0000b030 g     F .text.itcm	0000000c IRQHandler_Serial1
0000b048  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
00007564 g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
60001674  w    F .text.code	00000002 startup_early_hook
000034dc g     F .text.itcm	00000092 ExFatFile::addCluster()
200033fc g     O .bss	00000004 FsDateTime::callback2
20000f80  w    O .data	0000002c vtable for File
00007900 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
00002798  w    F .text.itcm	000000f0 SDClass::usedSize()
0000c9f0 g     F .text.itcm	00000044 usb_serial_peekchar
0000e910 g     F .text.itcm	0000000c __sfp_lock_acquire
0000e930 g     F .text.itcm	00000000 memchr
000070a4 g     F .text.itcm	00000020 FatPartition::fatPut(unsigned long, unsigned long)
0000a3ec  w    F .text.itcm	00000048 IMX_RT1060_I2CSlave::stop_listening()
0000b24c g     F .text.itcm	000002f0 set_arm_clock
200038d4 g     O .bss	00000004 systick_cycle_count
20002290 g     O .data	00000016 usb_string_serial_number_default
0000ef94 g     F .text.itcm	0000020c _free_r
000080c0 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
000082c8 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
00008ba0 g     F .text.itcm	000000b8 SdioCard::readStop()
000076f8  w    F .text.itcm	00000004 SharedSpiCard::type() const
0000df94 g     F .text.itcm	0000000c __locale_mb_cur_max
00012244 g     F .text.itcm	00000016 _wcsrtombs_r
0000ce54 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
0000d274 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20003524 g     O .bss	00000190 __atexit0
0000c4a0  w    F .text.itcm	00000004 usb_serial_class::flush()
0000ac04 g     F .text.itcm	00000016 IMX_RT1060_I2CSlave::listen(unsigned char, unsigned char)
00004060 g     F .text.itcm	000000b0 ExFatFormatter::writeUpcase(unsigned long)
0000a2b0 g     F .text.itcm	00000054 I2CDriverWire::I2CDriverWire(I2CMaster&, I2CSlave&)
20002138 g     O .data	00000004 __malloc_sbrk_base
0000c498  w    F .text.itcm	00000004 usb_serial_class::read()
20000f34 g     O .data	0000002c vtable for IMX_RT1060_I2CSlave
00006478 g     F .text.itcm	00000110 FatFile::remove()
0000bad0  w    F .text.itcm	00000006 _lseek
0000bad8  w    F .text.itcm	00000004 __cxa_pure_virtual
0000e3d4 g     F .text.itcm	000000f0 __lshift
0000507c g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
0000c3c0 g     F .text.itcm	00000030 usb_prepare_transfer
0000cd28 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
000076fc  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0000b8f4 g     F .text.itcm	0000018c unused_interrupt_vector
00013748 g     F .text.itcm	00000100 __ssprint_r
200038ec g     O .bss	00000004 usb_timer0_callback
60001b74 g     F .text.code	00000130 tempmon_init
00005dcc g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
0000e9d0 g     F .text.itcm	00000062 _vasnprintf_r
00011ed0 g     F .text.itcm	00000088 __register_exitproc
00007704 g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
000033b0 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
0000a47c  w    F .text.itcm	0000003c IMX_RT1060_I2CSlave::~IMX_RT1060_I2CSlave()
20000f60 g     O .data	00000020 vtable for IMX_RT1060_I2CMaster
0000d610 g     F .text.itcm	0000008a strncmp
00005d10 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
000039d0 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
000067c8 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000ca4c g     F .text.itcm	00000070 usb_serial_flush_input
00004b78 g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
0000e1b8 g     F .text.itcm	0000015c __multiply
0000cadc g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00007b3c g     F .text.itcm	000001f4 SharedSpiCard::begin(SdSpiConfig)
0000d69c g     F .text.itcm	00000064 strncpy
0000cda4 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
200036c0 g     O .bss	00000028 __malloc_current_mallinfo
20000db4 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
0000e65c g     F .text.itcm	000000d4 __d2b
00008330 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
00008478  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60001d8c g     F .text.code	00000054 _reboot_Teensyduino_
00008614  w    F .text.itcm	0000000e SdioCard::~SdioCard()
60001678 g     F .text.code	00000002 startup_default_middle_hook
00007790 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
20002b10 g     O .bss	00000034 Master2
00007da8 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
20002adc g     O .bss	00000034 Master1
00008acc g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
0000bcc8 g     F .text.itcm	00000630 usb_isr
0000df30 g     F .text.itcm	0000000c __cxa_atexit
200022a7 g     O .data	00000001 hw::LedsDriver::DebugDriver
00002d60 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0000aaec g     F .text.itcm	0000010c IMX_RT1060_I2CSlave::listen(unsigned long, unsigned long)
00013074 g     F .text.itcm	00000024 _close_r
00006d30  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0000a578  w    F .text.itcm	0000005c IMX_RT1060_I2CSlave::IMX_RT1060_I2CSlave(IMXRT_LPI2C_Registers*, IMX_RT1060_I2CBase::Config&, void (*)())
0000798c g     F .text.itcm	0000006e SharedSpiCard::readStop()
00000520  w    F .text.itcm	00000018 SDFile::peek()
00009aa0 g     F .text.itcm	00000056 FsCache::sync()
20001a20 g     O .data	00000050 SPI
0000dcf4 g     F .text.itcm	00000060 memcmp
20000edc  w    O .data	00000028 vtable for usb_serial_class
00009a3c g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
0000df88 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00009858 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
200038c8 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
000120a0 g     F .text.itcm	000000cc __swsetup_r
00003624 g     F .text.itcm	0000005e ExFatFile::rmdir()
00007eb8 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
20001d30 g     O .data	00000408 __malloc_av_
20003520 g     O .bss	00000004 __atexit
000005dc  w    F .text.itcm	00000014 SDFile::flush()
0000f1c8 g     F .text.itcm	00000022 __sread
200032d4  w    O .bss	00000004 guard variable for hw::async::async_master::get<Master>()::m
0000cb70 g     F .text.itcm	00000094 usb_serial_flush_output
0000dfa0 g     F .text.itcm	0000000c __malloc_lock
0000ce38 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
00004688 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
00009b5c g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
20002400 g     O .data	000002c0 _VectorsRam
00009a50 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
000065f4 g     F .text.itcm	00000120 FatFormatter::initFatDir(unsigned char, unsigned long)
000131c8 g     F .text.itcm	00000054 _fflush_r
0000a47c  w    F .text.itcm	0000003c IMX_RT1060_I2CSlave::~IMX_RT1060_I2CSlave()
0000e730 g     F .text.itcm	00000078 _calloc_r
00009fa8 g     F .text.itcm	00000234 SPIClass::begin()
0000a434 g     F .text.itcm	00000048 IMX_RT1060_I2CMaster::end()
0000610c g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
2000390f g     O .bss	00000001 yield_active_check_flags
000037bc g     F .text.itcm	0000005e ExFatFile::sync()
0000df8c g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2000390d g     O .bss	00000001 usb_high_speed
00005528 g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
00008a04 g     F .text.itcm	0000007c SdioCard::isBusy()
0000de8c g     F .text.itcm	000000a4 memset
0000b720 g     F .text.itcm	00000010 main
200036ec g     O .bss	00000004 __malloc_max_total_mem
000047c0 g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
0000df84 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
20003434 g     O .bss	000000b4 hw::LedsDriver::GlobalDriver
00008398 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
0000ac34 g     F .text.itcm	00000050 IMX_RT1060_I2CSlave::end_of_frame()
00003d04 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0000a254 g     F .text.itcm	0000001a I2CDriverWire::read()
00009bc0 g     F .text.itcm	000000a0 lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
20002204 g     O .data	00000050 i2c4_config
00004e7c g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
000006a0  w    F .text.itcm	0000004c SDFile::available()
0000a518  w    F .text.itcm	00000060 IMX_RT1060_I2CSlave::after_receive(std::function<void (unsigned int, unsigned short)>)
0000f24c g     F .text.itcm	00000008 __sclose
0000c438 g     F .text.itcm	00000058 usb_init_serialnumber
0000a34c g     F .text.itcm	00000004 IMX_RT1060_I2CMaster::get_bytes_transferred()
60001e94 g       .text.code	00000000 __init_array_end
00012388 g     F .text.itcm	00000cec _dtoa_r
0000d794 g     F .text.itcm	00000560 _malloc_r
00007ff0 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
0000f254 g     F .text.itcm	0000001a __ascii_wctomb
00000070  w    F .text.itcm	00000012 SDFile::isOpen()
00007408 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
200034f0 g     O .bss	00000004 FatVolume::m_cwv
200010f8  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000af44 g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
0000a1dc g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0000b5e4 g     F .text.itcm	00000054 micros
00003684 g     F .text.itcm	00000138 ExFatFile::syncDir()
0000eef4 g     F .text.itcm	000000a0 _malloc_trim_r
000138f8 g     F .text.itcm	00000106 _wcsnrtombs_l
60001ec4 g     O .text.progmem	00000004 string0
0000cb08 g     F .text.itcm	00000018 usb_serial_write
000020d0 g     F .text.itcm	00000254 hw::LedsDriver::begin_cycle()
6000167c  w    F .text.code	00000002 startup_late_hook
00008430 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000c49c  w    F .text.itcm	00000004 usb_serial_class::available()
000012e4  w    F .text.itcm	0000006e midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::MidiInterface(midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>&)
00005a04 g     F .text.itcm	0000000c FatFile::sync()
200022a8 g     O .data	00000001 hw::async::DebugAsync
0000a22c  w    F .text.itcm	00000008 I2CDriverWire::available()
0000aa28 g     F .text.itcm	000000c4 IMX_RT1060_I2CMaster::begin(unsigned long)
00006aa8 g     F .text.itcm	000000b4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00002724  w    F .text.itcm	0000003a SDClass::mkdir(char const*)
20000000 g     O .data	00000280 endpoint_queue_head
20001ba0 g     O .data	00000018 hw::MCP_DEVICES
60001e94  w    O .text.progmem	00000016 usb_string_product_name
0000b53c g     F .text.itcm	000000a8 delay
00002c78 g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
00001588 g     F .text.itcm	000008f8 hw::LedsDriver::setup(unsigned long, unsigned long)
00013a40 g     F .fini	00000000 _fini
000009fc  w    F .text.itcm	00000570 hw::async::async_master::update()
00007880 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
000034b8 g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
0000b0d8 g     F .text.itcm	0000001c Print::printf(char const*, ...)
00004e5c g     F .text.itcm	0000001e FatFile::close()
0000bae0 g     F .text.itcm	00000004 Panic_Temp_isr
000007cc  w    F .text.itcm	00000048 SDFile::~SDFile()
00004f10 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
00013a00 g     F .text.itcm	00000024 _wcsnrtombs_r
00008610  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000538  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
00000738  w    F .text.itcm	00000054 File::write(unsigned char)
0000f2dc g     F .text.itcm	0000002c _write_r
20002b44 g     O .bss	000004d4 SD
00008d74 g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
2000214c g     O .data	00000004 _impure_ptr
2000102c  w    O .data	00000024 vtable for Stream
00002f00 g     F .text.itcm	0000002c ExFatFile::peek()
00013098 g     F .text.itcm	00000130 __sflush_r
20000e24  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
20003168 g     O .bss	00000078 Wire
000005f0  w    F .text.itcm	00000014 SDFile::write(void const*, unsigned int)
000076c0 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
0000f294 g     F .text.itcm	00000046 _fwalk_sglue
000085a0 g     F .text.itcm	0000000c SdioCard::errorCode() const
20002888 g     O .bss	00000110 MIDIA
0000526c g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00000604  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60001e80 g       .text.code	00000000 __preinit_array_end
00004978 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
00001354  w    F .text.itcm	00000050 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::begin(unsigned char)
00011f58 g     F .text.itcm	0000002a __ascii_mbtowc
0000bc9c g     F .text.itcm	0000002c usb_stop_sof_interrupts
00000f6c g     F .text.itcm	0000002c setup_sd_card()
00001e80 g     F .text.itcm	00000250 setup
20001854 g     O .data	00000084 usb_descriptor_list
00008a80 g     F .text.itcm	00000020 SdioCard::status()
00004ef0 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
0000006c  w    F .text.itcm	00000002 Print::flush()
200030f8 g     O .bss	00000070 Slave2
00002618  w    F .text.itcm	00000052 SDClass::rmdir(char const*)
00005314 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
000052d8 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
20003400 g     O .bss	00000004 ExFatVolume::m_cwv
20068000 g       .text.csf	00000000 _estack
000075d8 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
000003b8  w    F .text.itcm	00000058 File::read()
0000cb20 g     F .text.itcm	00000050 usb_serial_write_buffer_free
0000ac84 g     F .text.itcm	00000132 IMX_RT1060_I2CSlave::_interrupt_service_routine()
20002140 g     O .data	0000000c __sglue
0000c810 g     F .text.itcm	00000100 usb_serial_configure
0000094c  w    F .text.itcm	000000b0 File::~File()
0000b0bc  w    F .text.itcm	0000001c _write
200026c0 g       .data	00000000 _edata
00004a78 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
20003904 g     O .bss	00000001 external_psram_size
00008610  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00009b74 g     F .text.itcm	0000004c FsName::get16()
00007774  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00007f7c g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00007a14 g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00004754 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
00004dc4 g     F .text.itcm	00000078 FatFile::addDirCluster()
00013340 g     F .text.itcm	000000aa __fputwc
0000a5d4 g     F .text.itcm	00000094 initialise_common(IMX_RT1060_I2CBase::Config, unsigned long, InternalPullup)
0000c4a4  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00002424 g     F .text.itcm	00000044 hw::LedsDriver::update()
00006da8 g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
0000d158 g     F .text.itcm	00000040 nvic_execution_priority()
0000a350  w    F .text.itcm	0000000a IMX_RT1060_I2CSlave::set_transmit_buffer(unsigned char const*, unsigned int)
0000b86c g     F .text.itcm	00000062 ultoa
0000a35c  w    F .text.itcm	0000000a IMX_RT1060_I2CSlave::set_receive_buffer(unsigned char*, unsigned int)
000024c8  w    F .text.itcm	00000002 SDClass::~SDClass()
0000a38c  w    F .text.itcm	00000060 IMX_RT1060_I2CSlave::after_transmit(std::function<void (unsigned short)>)
000074b4 g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
200038cc g     O .bss	00000004 serialMIDIA
0000f1ec g     F .text.itcm	0000003e __swrite
0000b864 g     F .text.itcm	00000004 operator new(unsigned int)
0000afc8 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
2000213c g     O .data	00000004 __malloc_trim_threshold
0000c494  w    F .text.itcm	00000004 usb_serial_class::peek()
0000847c  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000f1a0 g     F .text.itcm	00000028 fiprintf
00010ec4 g     F .text.itcm	00000f8c _vfiprintf_r
0000985c  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0000e508 g     F .text.itcm	00000154 __mdiff
00008600 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
000049b0 g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00006c1c g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
200018f8 g     O .data	00000120 _impure_data
00003018 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
0000e91c g     F .text.itcm	0000000c __sfp_lock_release
00008ba0 g     F .text.itcm	000000b8 SdioCard::writeStop()
00002c40 g     F .text.itcm	00000014 ExFatFile::close()
200011b8 g     O .data	00000101 _ctype_
0000bab4  w    F .text.itcm	00000004 _read
60001e80 g       .text.code	00000000 __init_array_start
20001a18 g     O .data	00000004 F_BUS_ACTUAL
00003fd4 g     F .text.itcm	00000040 ExFatFormatter::writeUpcaseByte(unsigned char)
0000266c  w    F .text.itcm	00000064 SDClass::rename(char const*, char const*)
0001216c g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
00007778  w    F .text.itcm	00000006 SharedSpiCard::end()
0000ea40 g     F .text.itcm	000000dc strlen
0000527c g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
000057a4 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
60001e94 g     O .text.progmem	00000016 usb_string_product_name_default
0000d758 g     F .text.itcm	0000001c vdprintf
00008640 g     F .text.itcm	00000068 SdioCard::sectorCount()
200021b4 g     O .data	00000050 i2c3_config
00005938 g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
0000cce0 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
60001678  w    F .text.code	00000002 startup_middle_hook
20001080 g     O .data	00000070 vtable for SdioCard
00006d2c g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
60001684 g     F .text.code	00000110 configure_cache
00008474  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000b0f4 g     F .text.itcm	00000158 breakTime(unsigned long, DateTimeFields&)
000081d8  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
000094b0 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
0000996c g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
000013a4 g     F .text.itcm	00000124 setup_raw_io()
60001e80 g       .text.code	00000000 __preinit_array_start
0000c418 g     F .text.itcm	0000001c usb_receive
00004880 g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
0000e0fc g     F .text.itcm	00000060 __lo0bits
0000492c g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
00005854 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00019000 g       *ABS*	00000000 _flashimagelen
00005a10 g     F .text.itcm	000000d8 FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
000079fc g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
0000a4b8  w    F .text.itcm	00000060 IMX_RT1060_I2CSlave::before_transmit(std::function<void (unsigned short)>)
0000d604 g     F .text.itcm	0000000a __aeabi_atexit
0000b8d0 g     F .text.itcm	00000024 rtc_get
00003570 g     F .text.itcm	000000b4 ExFatFile::remove()
00013220 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
0000b00c g     F .text.itcm	00000004 pendablesrvreq_isr
00002888  w    F .text.itcm	0000003c SDClass::totalSize()
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
20001bc4 g     O .data	0000016c __global_locale
00000f98 g     F .text.itcm	00000034 setup_i2c_buses()
000090dc g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
00002c54 g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000c910 g     F .text.itcm	000000e0 usb_serial_read
200036bc g     O .bss	00000001 __lock___sfp_recursive_mutex
00000084  w    F .text.itcm	00000002 midi::MidiInterface<midi::SerialMIDI<HardwareSerial, midi::DefaultSerialSettings>, midi::DefaultSettings, midi::DefaultPlatform>::~MidiInterface()
0000c35c g     F .text.itcm	00000064 usb_config_tx
0000bab8  w    F .text.itcm	00000006 _close
00007080 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
0000d784 g     F .text.itcm	00000010 free
0000463c g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
0000e018 g     F .text.itcm	000000a4 __multadd
0000e004 g     F .text.itcm	00000012 _Bfree
20001ae0 g     O .data	00000060 Serial2
00000454  w    F .text.itcm	0000001a SDFile::size()
00006b88 g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
0000078c  w    F .text.itcm	00000040 SDFile::~SDFile()
20002290  w    O .data	00000016 usb_string_serial_number
0000964c g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
000085dc g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


